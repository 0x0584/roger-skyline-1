* About

This is a guide to do all the things described in Roger Skyline 1. This might not take so much time, or let me say it otherwise, *I DON'T HAVE MUCH TIME! I NEED TO GET OUT OF THE BLACK HOLE AS SOON AS POSSIBLE!*

* A Debian VM

For the moment, All of this is done on a =24-inch iMac (Late 2006)= running a Max OS X =Lion 10.7.5= using a =Debian 9.9= in =VirtualBox 4.3=

Here's a link to [[https://cdimage.debian.org/debian-cd/current/amd64/iso-cd/debian-10.0.0-amd64-netinst.iso][Debian 10.10 Net Install]] for latest packages + minimum download/install time. Also [[https://download.virtualbox.org/virtualbox/6.0.10/VirtualBox-6.0.10-132072-OSX.dmg][VirtualBox 6.0]]. Important thing is to allocate exactly =8 GB= with no partitioning!

* IN-PROGRESS Network and Security

- State "IN-PROGRESS"                  [2019-08-01 Thu 14:23]

** Initial Configuration

+ create a new non-root user using =adduser <NAME>=
+ update the system using =apt-get update -y && apt-get upgrade -y=
+ install essential tools using =apt-get install -y sudo vim apache2 portsentry ufw fail2ban mailutils net-tools=
  + sudo :: execute commands as =root=
  + vim :: the perfect text editor for servers, since their non GUI systems, mostly
  + fail2ban :: monitor server logs and detects any IP with a suspesious activity, after predefined number of failure, it blocks the IP for a specific duration[fn:1]
  + portsentry :: port scanning utility, good for scanning port and avoiding attacks[fn:2]
  + apache2 :: the fucking HTTP server itself[fn:3]
  + mailutils :: the swiss army knife of electronic mail handling[fn:4]
  + ufw :: uncomplicated firewall[fn:5]

** DONE Configure Sudo

- State "DONE"       from              [2019-08-02 Fri 19:43]
Using =vim= as =root=, add the /user's previlege specification/ the file =/etc/sudoers=. Right at the comment =# User privilege specification= add =<LOGIN>    ALL=(ALL:ALL) NOPASSWD:ALL=

** PENDING Configure static IP

- State "PENDING"    from              [2019-08-02 Fri 19:43]

*NEED TO CHECK THIS AT SCHOOL!*

#+BEGIN_QUOTE
/Must change the network adapter from NAT to Bridged Adapter in the VM's settings/
#+END_QUOTE

We need to setup the /primary network/, thus we need to edit =/etc/network/interfaces=. We find that the primary network (for my VM at least) is =enp0s3=, found under the line =#The primary network interface=.

To configure a static IP we need to create the file[fn:6] =/etc/network/interfaces.d/enp0s3=.

#+BEGIN_SRC
iface enp0s3 inet static
        address 10.11.200.247
        netmask 255.255.255.252
        gateway 10.11.254.254
#+END_SRC

Finally, we restart the network using =sudo service networking restart= and check that using =ip addr= and look for =enp0s3=

** DONE Configure SSH

- State "DONE"       from "IN-PROGRESS" [2019-08-02 Fri 19:42]
- State "IN-PROGRESS"                   [2019-08-01 Thu 14:19]

*** DONE Configure default port

- State "DONE"                        [2019-08-02 Fri 19:42]

SSH could be configured by editing the default port (22) in the file =/etc/ssh/sshd_config=, The port should not be chosen arbitrary (or it might be so. but, it *must not be already used* as it would create conflicts). We can check that using =sudo lsof -i -P -n | grep LISTEN | grep <PORT>=.

However, IANA -- The Internet Assigned Numbers Authority (IANA) is responsible for the global coordination of the DNS Root, IP addressing, and other Internet protocol resources. their port assignment guidelines said the following:

#+BEGIN_QUOTE
/Port numbers are divided into three ranges: Well Known Ports, Registered Ports, and Dynamic and/or Private Ports./

- The Well Known Ports are those from =0= through =1023= and SHOULD NOT be used.
- Registered Ports are those from =1024= through =49151= should also be avoided too.
- Dynamic and/or Private Ports are those from 49152 through 65535 and can be used.

Though nothing is stopping you from using reserved port numbers, our suggestion may help avoid technical issues with port allocation in the future.
#+END_QUOTE

I have chosen =2222= as an SSH port

*** DONE Setup access with public keys

- State "DONE"                         [2019-08-02 Fri 19:41]

#+BEGIN_QUOTE
_NOTE:_

The process of creating publib/private key pair is *done on the Mac OS X machine*. Where we're going to send the public key to the server to know who were are when interacting.

the command =ssh-copy-id= might not be available on Mac OS X by default, install it via =brew install ssh-copy-id openssh=
#+END_QUOTE

To generate a public/private (RSA) key pair we need to execute =ssh-keygen -t rsa= where =-t rsa= specifies the type of encryptation to /RSA -- Rivest–Shamir–Adleman Encryptaion Algorithm/. Two files will be generated, =id_rsa= and =id_rsa.pub=, which are /private/ and /public/ key respectively.

Next step is to copy the =id_rsa.pub= to the server using =ssh-copy-id= (WHAT! THEY HAVE COMMAND FOR THAT TOO!) as =ssh-copy-id -i id_rsa.pub <USER>@<IP> -p <PORT>=. In my case, USER is =archid-= IP is =10.11.200.247= and PORT is =2222=.

This result the addition of the key to the server's =~/.ssh/authorized_keys=

Now, we need to remove root login permit, and password authentification by editing =/etc/ssh/sshd_config= which is done by uncommenting lines =32= and =56= respectively.

Finally, restarting SSH daemon service using =sudo service ssh restart=.

** IN-PROGRESS Configure Firewall

- State "IN-PROGRESS" from "TODO"       [2019-08-02 Fri 19:44]

*** Configuring UFW

Enable UFW is it wasn't, using =sudo ufw status= and =sudo ufw enable=. Next is configuring the firewall rules for SSH, HTTP and HTTPS.

#+BEGIN_SRC
sudo ufw allow 50683/tcp            # SSH
sudo ufw allow 80/tcp               # HTTP
sudo ufw allow 443                  # HTTPS
#+END_SRC

*** Configuring fail2ban

We need to edit DOS -- Denail Of Servce with fail2ban, which is done by editing =/etc/fail2ban/jail.conf=. A basic settings would be like this:

+ For SSH

  #+BEGIN_QUOTE
  [sshd]
  enabled = true
  port  = 42
  logpath = %(sshd_log)s
  backend = %(sshd_backend)s
  maxretry = 3
  bantime = 600
  #+END_QUOTE

+ For HTTP/HTTPS

  #+BEGIN_QUOTE
  [http-get-dos]
  enabled = true
  port = http,https
  filter = http-get-dos
  logpath = /var/log/apache2/access.log
  maxretry = 300
  findtime = 300
  bantime = 600
  action = iptables[name=HTTP, port=http, protocol=tcp]
  #+END_QUOTE

** TODO Configure ports

** TODO Manage Services and Packages

* PENDING Web Deployment

- State "PENDING"                     [2019-08-01 Thu 14:23]

* Footnotes

[fn:6] it's possible to change it at place but it's not recommended. this is a [[https://linuxconfig.org/how-to-setup-a-static-ip-address-on-debian-linux][good article]]

[fn:5] this seems like a good [[https://www.digitalocean.com/community/tutorials/how-to-setup-a-firewall-with-ufw-on-an-ubuntu-and-debian-cloud-server][documentation]]

[fn:4] good luck reading any GNU [[https://mailutils.org/manual/mailutils.html][documentation]]

[fn:3] [[https://www.hostinger.com/tutorials/what-is-apache][good article]] comparison between many web servers including NGINX and TOMCAT

[fn:2] this [[https://wiki.debian-fr.xyz/Portsentry][debian blog]] has a some good documentation. also [[https://www.symantec.com/connect/articles/portsentry-attack-detection-part-one][here]]!

[fn:1] here's a [[https://www.linode.com/docs/security/using-fail2ban-for-security/][good place]] to document about fail2ban for serve, and [[https://www.digitalocean.com/community/tutorials/how-to-protect-ssh-with-fail2ban-on-ubuntu-14-04][this]] one is to secure SSH
