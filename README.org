* About

This is a guide to do all the things described in Roger Skyline 1. This might not take so much time, or let me say it otherwise, *I DON'T HAVE MUCH TIME! I NEED TO GET OUT OF THE BLACK HOLE AS SOON AS POSSIBLE!*

* A Debian VM

Here's a link to [[https://cdimage.debian.org/debian-cd/current/amd64/iso-cd/debian-10.0.0-amd64-netinst.iso][Debian 10.0 Net Install]] for latest packages + minimum download/install time. Also [[https://download.virtualbox.org/virtualbox/6.0.10/VirtualBox-6.0.10-132072-OSX.dmg][VirtualBox 6.0]]. Important thing is to allocate exactly =8 GB= with no partitioning!

* DONE Disk partitioning

- State "DONE"       from "TODO"       [2019-09-11 Wed 19:31]
 Choose manual disk, and create three primary partitions:

+ the =/= partition, has 4.5 GB, ext4
+ the =/swap= haS 1GB ext4
+ the =/home= has the rest

* IN-PROGRESS Network and Security

- State "IN-PROGRESS"                  [2019-08-01 Thu 14:23]

** DONE Initial Configuration

- State "DONE"       from "IN-PROGRESS" [2019-08-09 Fri 10:23]
- State "IN-PROGRESS" from "TODO"       [2019-08-08 Thu 21:57]

Update the system using =apt-get update -y && apt-get upgrade -y= to ensure that the latest version is available. Install essential tools using

#+BEGIN_SRC shell
apt-get install -y sudo vim git apache2 portsentry \
                    iptables-presistent fail2ban \
                    mailutils dnsutils net-tools
#+END_SRC

*** DONE User configuration

- State "DONE"       from "TODO"       [2019-08-08 Thu 21:46]

+We can create a new non-root user using =/usr/sbin/adduser -m <USER>=[fn:7]. The flag =-d <PATH>= is used to set a specific user path.+

We create a new user using =useradd <USER>= instead of =/usr/sbin/adduser=. Also we need to add =<USER>= to sudoers. Either using =usermod -a -G sudo <USER>= to add =<USER>= to /sudo/ group. Or manually by updating the /user's previlege specification/ in =/etc/sudoers=

#+BEGIN_SRC conf
# User privilege specification
<USER>    ALL=(ALL:ALL) NOPASSWD:ALL
#+END_SRC

*** DONE Configure a static IP

- State "DONE"       from "IN-PROGRESS" [2019-08-09 Fri 10:07]
- State "IN-PROGRESS" from "TODO"       [2019-08-08 Thu 08:20]

#+BEGIN_QUOTE
/One things which is required here and could not be done internally, is to change the NAT to Bridge[fn:8]
#+END_QUOTE

The first place check is the primary network. we need to setup the networking interface. This is done by editing =/etc/network/interfaces=. The primary network on my VM shows

#+BEGIN_SRC conf
#The primary network interface
allow-hotplug enp0s3
iface enp0s3 inet dhcp
#+END_SRC

Remove the two lines under the comment, And replace them with =auto enps03= and we need to create a new network interface =/etc/interfaces.d/enp0s3=

#+BEGIN_SRC conf
# configuration of enp0s3 network interface
iface enp0s3 inet static
    address 10.11.200.247
    netmask 200.255.255.252
    gateway 10.11.254.254
#+END_SRC

Finally, we restart the network using =service networking restart= and check that using =ip addr= and look for =enp0s3=

** DONE Configure SSH

- State "DONE"       from "IN-PROGRESS" [2019-08-02 Fri 19:42]
- State "IN-PROGRESS"                   [2019-08-01 Thu 14:19]

*** DONE Configure default port

- State "DONE"                        [2019-08-02 Fri 19:42]

SSH could be configured by editing the default port (22) in the file =/etc/ssh/sshd_config=, The port should not be chosen arbitrary (or it might be so. but, it *must not be already used* as it would create conflicts). We can check that using =lsof -i -P -n | grep LISTEN | grep <PORT>=.

However, IANA -- /The Internet Assigned Numbers Authority/ is responsible for the global coordination of the DNS Root, IP addressing, and other Internet protocol resources. Their port assignment guidelines said the following:

#+BEGIN_QUOTE
/Port numbers are divided into three ranges: Well Known Ports, Registered Ports, and Dynamic and/or Private Ports/.

    - The Well Known Ports are those from =0= through =1023= and SHOULD NOT be used.
    - Registered Ports are those from =1024= through =49151= should also be avoided too.
    - Dynamic and/or Private Ports are those from =49152= through =65535= and can be used.

Though nothing is stopping you from using reserved port numbers, but it's better to avoid technical issues with port allocation in the future.
#+END_QUOTE

I have chosen =63845= as a SSH port, after that we need to modify the port in =/etc/ssh/sshd_config/=. Then, restart sshd daemon

*** DONE Setup access with public keys

- State "DONE"                         [2019-08-02 Fri 19:41]

#+BEGIN_QUOTE
_NOTE:_

The process of creating public/private key pair is *done on the Host machine*. Where we're going to send the public key to the server to know our identity when interacting without a need of a password.

The command =ssh-copy-id= might not be available on Mac OS X by default, install it via =brew install ssh-copy-id=
#+END_QUOTE

To generate a public/private (RSA) key pair we need to execute =ssh-keygen -t rsa= where =-t rsa= specifies the type of encryptation to /RSA -- Rivest–Shamir–Adleman Encryptaion Algorithm/. Two files will be generated, =id_rsa= and =id_rsa.pub=, which are /private/ and /public/ key respectively.

Next step is to copy the =id_rsa.pub= to the server using =ssh-copy-id= (WHAT! THEY HAVE COMMAND FOR THAT TOO!) as =ssh-copy-id -i id_rsa.pub <USER>@<IP> -p <PORT>=. This result the addition of the key to the server's =~/.ssh/authorized_keys=

Now, we need to remove root /login permit/, /public key authuntification/ and /password authentification/ by editing =/etc/ssh/sshd_config= which is done by uncommenting lines =32=, =37= and =56= respectively.

Finally, restarting SSH daemon service using =service ssh restart=.

** DONE Configure Firewall and Banlist

- State "DONE"       from "IN-PROGRESS" [2019-08-03 Sat 02:11]
- State "IN-PROGRESS" from "TODO"       [2019-08-02 Fri 19:44]

*** DONE Configuring iptables

- State "DONE"       from "TODO"       [2019-09-11 Wed 23:47]

To configure a firewall using iptables, we need to add the [[file:fw][fw]] to =/etc/network/if-pre-up.d/= so that the firewall loads up at every boot.

It contains configuration to block anything but SSH HTTP/HTTPS. Rejecting Smurf attack, blocking the attacking IP addresses for a day, limiting the number of connections per minute to reduce bruteforce changes.

Also, we need to allow DNS queries for things like =ping= and =apt-get=

*** DONE Configuring fail2ban

- State "DONE"       from "TODO"       [2019-08-09 Fri 11:06]
We need to protect the server against DOS -- /Denail Of Service/ with fail2ban, +which is done by editing /etc/fail2ban/jail.conf+ we need to edit =jail.local=. A basic settings is in the file [[file:jail.local][jail.local]]

Finally, restaring the service using =service fail2ban restart=

** DONE Configure ports

- State "DONE"       from "IN-PROGRESS" [2019-09-12 Thu 15:22]
- State "IN-PROGRESS" from "TODO"       [2019-08-09 Fri 11:11]

First thing to do, is ot switch into /auto/ mode for TCP and UDP. By editing the file =/etc/default/portsentry= as follows:

#+BEGIN_SRC conf
TCP_MODE="atcp"
UDP_MODE="audp"
#+END_SRC

Next, edit portsentry.conf to configure blocking and killing route. Comment the current =KILL_ROUTE= and replace it with the following

#+BEGIN_SRC conf
KILL_ROUTE="/sbin/iptables -I INPUT -s $TAGETS -j DROP"
# Comment KILL_HOSTS_DENY
KILL_HOSTS_DENY="ALL: $TARGET$ : DENY
#+END_SRC

** IN-PROGRESS Manage Services and Packages

- State "IN-PROGRESS" from "TODO"       [2019-08-09 Fri 11:33]

*** DONE Disabling unwanted services

- State "DONE"       from "TODO"       [2019-08-09 Fri 11:52]
Services that we don't need are apt-dialy and apt-upgrade and keyboard/console setup nor the syslog

#+BEGIN_SRC bash
systemctl disable console-setup.service
systemctl disable keyboard-setup.service
systemctl disable apt-daily.timer
systemctl disable apt-daily-upgrade.timer
systemctl disable syslog.service
#+END_SRC

*** DONE Scheduling an update

- State "DONE"       from "TODO"       [2019-08-09 Fri 11:52]
Next, create a the repo =~/.scripts= and write in the file =update.sh= as following

#+BEGIN_SRC bash
#!/bin/bash

LOGFILE=/var/log/update_script.log
sudo apt-get update -y >> $LOGFILE
sudo apt-get upgrade -y >> $LOGFILE
#+END_SRC

Next, we need to add the task to cron by executing =crontab -e= (as root)

#+BEGIN_SRC shell
SHELL=/bin/bash
PATH=/sbin:/bin:/usr/sbin:/usr/bin

@reboot sudo ~/.scripts/update.sh
0 4 * * 6 sudo ~/scirpts/update.sh  # WTF IS THIS SYNTAX
#+END_SRC

*** TODO Monitor crontab file

# idea is to create a md5 somewhere, and keep comparing it each time. Then if we find something bad, we send and email.

* PENDING Web Deployment

- State "PENDING"                     [2019-08-01 Thu 14:23]

** Deploying a webpage

** SSL Certificates

* Footnotes

[fn:8] I can't tell whic this but yeah

[fn:7] Since if we didn't, there would be no home directory.

[fn:6] it's possible to change it at place but it's not recommended. this is a [[https://linuxconfig.org/how-to-setup-a-static-ip-address-on-debian-linux][good article]]

[fn:5] this seems like a good [[https://www.digitalocean.com/community/tutorials/how-to-setup-a-firewall-with-ufw-on-an-ubuntu-and-debian-cloud-server][documentation]]

[fn:4] good luck reading any GNU [[https://mailutils.org/manual/mailutils.html][documentation]]

[fn:3] [[https://www.hostinger.com/tutorials/what-is-apache][good article]] comparison between many web servers including NGINX and TOMCAT

[fn:2] this [[https://wiki.debian-fr.xyz/Portsentry][debian blog]] has a some good documentation. also [[https://www.symantec.com/connect/articles/portsentry-attack-detection-part-one][here]]!

[fn:1] here's a [[https://www.linode.com/docs/security/using-fail2ban-for-security/][good place]] to document about fail2ban for serve, and [[https://www.digitalocean.com/community/tutorials/how-to-protect-ssh-with-fail2ban-on-ubuntu-14-04][this]] one is to secure SSH
